import os

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, FSInputFile
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from keyboards import kb_start, kb_back, ikb_celebrity, ikb_select_subject_quiz
from keyboards.callback_data import QuizData
from fsm.states import ChatGPTStates

command_router = Router()


@command_router.message(F.text == '–ù–∞–∑–∞–¥')
@command_router.message(Command('start'))
@command_router.message(F.text == '–ó–∞–∫–æ–Ω—á–∏—Ç—å')
@command_router.callback_query(QuizData.filter(F.subject == 'quiz_back'))
async def com_start(message: Message | CallbackQuery, state: FSMContext):
    if isinstance(message, Message):
        await message.answer_photo(
            photo=FSInputFile(path=os.path.join('images', 'main.jpg')),
            caption=f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!',
            reply_markup=kb_start(),
        )
    else:
        await message.bot.send_photo(
            chat_id=message.from_user.id,
            photo=FSInputFile(path=os.path.join('images', 'main.jpg')),
            caption=f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!',
            reply_markup=kb_start(),
        )
        await state.clear()


@command_router.message(F.text == '–ü–æ–º–æ—â—å')
@command_router.message(Command('help'))
async def com_help(message: Message):
    await message.answer(
        text='–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –±–æ—Ç —Å–æ–≤–º–µ—â–∞–µ—Ç —Å —Å–µ–±–µ —É–¥–æ–±—Å—Ç–≤–æ _Telegram_ –∏ –º–æ—â—å *ChatGPT*\n\n'
             '*–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ —Å—Å—ã–ª–∫–∏:*\n'
            '1. /start ‚Äî –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞\n'
            '2. /random - —É–∑–Ω–∞—Ç—å —Ä–∞–Ω–¥–æ–º–Ω—ã–π —Ñ–∞–∫—Ç ¬∑ üß†\n'
            '3. /gpt - –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å ChatGPT ¬∑ ü§ñ\n'
            '4. /talk - –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å –∏–∑–≤–µ—Å—Ç–Ω–æ–π –ª–∏—á–Ω–æ—Å—Ç—å—é ¬∑ üë§\n'
            '5. /quiz - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è ‚ùì',
        reply_markup=kb_back(),
    )


@command_router.message(Command('gpt'))
async def ai_gpt_command(message: Message, state: FSMContext):
    photo_file = FSInputFile(path=os.path.join('images', 'gpt.jpg'))
    # for item in dict(completion).items():
    #     print(item)
    await message.answer_photo(
        photo=photo_file,
        caption='–ù–∞–ø–∏—à–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫ ChatGPT',
        reply_markup=kb_back(),
    )
    await  state.set_state(ChatGPTStates.wait_for_request)


@command_router.message(F.text == '–î–∏–∞–ª–æ–≥ —Å –ª–∏—á–Ω–æ—Å—Ç—å—é')
@command_router.message(Command('talk'))
async def talk_command(message: Message, state: FSMContext):
    photo_file = FSInputFile(path=os.path.join('images', 'talk.jpg'))
    await message.answer_photo(
        photo=photo_file,
        caption='–í—ã–±–µ—Ä–∏—Ç–µ, —Å –∫–µ–º –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å',
        reply_markup=ikb_celebrity(),
    )
    await  state.set_state(ChatGPTStates.wait_for_request)


@command_router.callback_query(QuizData.filter(F.button == 'select_type'))
@command_router.message(F.text == '–ö–≤–∏–∑')
@command_router.message(Command('quiz'))
async def quiz_select_subject(message: Message, state: FSMContext):
    photo_file = FSInputFile(path=os.path.join('images', 'quiz.jpg'))
    await message.bot.send_photo(
        chat_id=message.from_user.id,
        photo=photo_file,
        caption='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –≤–æ–ø—Ä–æ—Å–æ–≤:',
        reply_markup=ikb_select_subject_quiz(),
    )
